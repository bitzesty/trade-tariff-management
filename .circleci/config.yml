version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.5.0
        environment:
          - TARIFF_MEASURES_LOGGER: 0
          - RAILS_ENV: test
          - PG_HOST: localhost
          - PG_USER: ubuntu
          - RACK_ENV: test
      - image: circleci/postgres:9.6.2
        environment:
          - POSTGRES_USER: ubuntu
          - POSTGRES_DB: circleci_test
      - image: redis:3.2.11
    environment:
      - GOVUK_APP_DOMAIN: test
      - DATABASE_URL: "postgres://ubuntu@localhost:5432/circleci_test"
      - TARIFF_SYNC_HOST: "http://example.com"
      - TARIFF_SYNC_USERNAME: "foo"
      - TARIFF_SYNC_PASSWORD: "bar"
      - TARIFF_SYNC_EMAIL: "sync@example.com"
      - TARIFF_FROM_EMAIL: "no-reply@example.com"
      - AWS_ACCESS_KEY_ID: "xxxxxxxxxxxxxxxxxxxx"
      - AWS_SECRET_ACCESS_KEY: "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      - AWS_REGION: "us-east-1"
      - AWS_BUCKET_NAME: "trade-tariff-management"
    steps:
      - checkout
      - run:
          name: Install System Dependencies
          command: sudo apt-get update -qq && sudo apt-get install -y build-essential postgresql libpq-dev nodejs rake
      - run:
          name: Install bundler
          command: gem install bundler
      - run:
          name: Install gems
          command: bundle install
      - run:
          name: Set up DB
          command: RAILS_ENV=test bundle exec rake db:create --trace
      - run:
          name: Load DB structure
          command: RAILS_ENV=test SCHEMA=db/structure.sql bundle exec rake db:structure:load --trace
      - run:
          name: "Run Rspec"
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out test_results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - run:
          name: "Measure test coverage level"
          command: |
            bundle exec bin/circle
      - deploy:
          command: |
            curl -v -L -o cf-cli_amd64.deb 'https://cli.run.pivotal.io/stable?release=debian64&source=github'
            sudo dpkg -i cf-cli_amd64.deb
            cf -v
      - deploy:
          command: |
            curl -v -L -o autopilot https://github.com/contraband/autopilot/releases/download/0.0.3/autopilot-linux
            chmod +x autopilot
            cf install-plugin autopilot -f
      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ];
              then CF_SPACE=dit-alpha CF_APP=tariff-management-dev CF_APP_WORKER=tariff-management-worker-dev ./bin/deploy
            fi
      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "staging" ];
              then CF_SPACE=dit-beta CF_APP=tariff-management-beta CF_APP_WORKER=tariff-management-worker-beta ./bin/deploy
            fi
