/ TODO: FIXME: Date should use the below format. Uncomment this when back end is ready
/ .form-group v-bind:class="{ 'form-group-error': errors.validity_start_date }"
/   fieldset
/     legend
/       h3.heading-medium
/         | Start date

/       span.error-message v-if="errors.validity_start_date" v-html="errors.validity_start_date"
/     .form-date
/       = f.input :validity_start_date_day, label: 'Day', required: true, input_html: {pattern:"[0-9]*", minlength:"2", maxlength:"2", title:"Two digits day"}, wrapper_html: { class: 'form-group-day' },  input_html: { "v-bind:class" => "{ 'form-control-error': errors.validity_start_date_day }" }
/       = f.input :validity_start_date_month, label: 'Month', required: true, input_html: {pattern:"[0-9]*", minlength:"2", maxlength:"2", title:"Two digits month"}, wrapper_html: { class: 'form-group-month' },  input_html: { "v-bind:class" => "{ 'form-control-error': errors.validity_start_date_month }" }
/       = f.input :validity_start_date_year, label: 'Year', required: true,  input_html: {pattern:"[0-9]*", minlength:"4", maxlength:"4", title:"Four digits year"}, wrapper_html: { class: 'form-group-year' },  input_html: { "v-bind:class" => "{ 'form-control-error': errors.validity_start_date_year }" }

.form-group v-bind:class="{ 'form-group-error': errors.validity_start_date }"
  fieldset
    label.heading-medium.m-t-5 for="start_date" id="validity_start_date"
      | Start date
      span.error-message v-if="errors.validity_start_date" v-html="errors.validity_start_date"

    = f.input :validity_start_date, as: :hidden, input_html: { "v-model" => "regulation.validity_start_date" }
    = content_tag "date-select", "", { "v-bind:value.sync" => "regulation.validity_start_date", id: "start_date" }

.form-group v-bind:class="{ 'form-group-error': errors.validity_end_date }"
  fieldset
    label.heading-medium.m-t-5 for="end_date" id="validity_end_date"
      | End date
      span.form-hint
        | Optional - leave blank if the regulation will remain in force indefinitely.
      span.error-message v-if="errors.validity_end_date" v-html="errors.validity_end_date"
    = f.input :validity_end_date, as: :hidden, input_html: { "v-model" => "regulation.validity_end_date" }
    = content_tag "date-select", "", { "v-bind:value.sync" => "regulation.validity_end_date", id: "end_date" }

.grid-row
  .column-one-half
    .form-group.m-b-10 v-bind:class="{ 'form-group-error': errors.regulation_group_id }"
      fieldset
        label.heading-medium.m-t-5 for="regulation_group" id="regulation_group_id"
          | What type of regulation do you want to create?
          span.form-hint
            | Please select the regulation group.
          span.error-message v-if="errors.regulation_group_id" v-html="errors.regulation_group_id"
        = content_tag "custom-select", "", { url: "/regulation_form_api/regulation_groups", "label-field" => "description", "code-field" => "regulation_group_id", "value-field" => "regulation_group_id",  "v-model" => "regulation.regulation_group_id", "name" => "regulation_form[regulation_group_id]", placeholder: "- select regulation group -", "allow-clear" => true, "code-class-name" => "prefix--regulation-group", id: "regulation_group" }
