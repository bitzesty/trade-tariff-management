xml.tag!("oub:measure") do |measure|
  xml_data_item_v2(measure, "measure.sid", self.measure_sid)
  xml_data_item_v2(measure, "measure.type", measure_type_format(self))
  xml_data_item_v2(measure, "geographical.area", self.geographical_area_id)
  xml_data_item_v2(measure, "goods.nomenclature.item.id", self.goods_nomenclature_item_id)
  xml_data_item_v2(measure, "additional.code.type", additional_code_type_format(self))
  xml_data_item_v2(measure, "additional.code", additional_code_format(self))
  xml_data_item_v2(measure, "ordernumber", self.ordernumber)
  xml_data_item_v2(measure, "reduction.indicator", self.reduction_indicator)
  xml_data_item_v2(measure, "validity.start.date", self.validity_start_date.strftime("%Y-%m-%dT%H:%M:%S"))
  xml_data_item_v2(measure, "measure.generating.regulation.role", self.measure_generating_regulation_role)
  xml_data_item_v2(measure, "measure.generating.regulation.id", self.measure_generating_regulation_id)
  xml_data_item_v2(measure, "validity.end.date", self.validity_end_date.try(:strftime, "%Y-%m-%dT%H:%M:%S"))
  xml_data_item_v2(measure, "justification.regulation.role", self.justification_regulation_role)
  xml_data_item_v2(measure, "justification.regulation.id", self.justification_regulation_id)
  xml_data_item_v2(measure, "stopped.flag", flag_format(self.stopped_flag))
  xml_data_item_v2(measure, "geographical.area.sid", self.geographical_area_sid)
  xml_data_item_v2(measure, "goods.nomenclature.sid", self.goods_nomenclature_sid)
  xml_data_item_v2(measure, "additional.code.sid", self.additional_code_sid)
  xml_data_item_v2(measure, "export.refund.nomenclature.sid", self.export_refund_nomenclature_sid)
end
